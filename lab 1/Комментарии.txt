//для файла mainOs.s
	.file	"hello.c"
	.text  / Объявление секции текста (исполняемый код)
	.section	.rodata.str1.8,"aMS",@progbits,1 // Объявление секции только для чтения (константы) 
	.align 8 // Выравнивание адресов на границу, кратную 8
.LC0:
	.string	"\320\247\320\270\321\201\320\273\320\276 \320\244\320\270\320\261\320\261\320\276\320\275\320\260\321\207\320\270 %d= %d\n" // Константа для форматирования вывода
	.section	.text.startup,"ax",@progbits // Объявление секции текста (исполняемый код)
	.p2align 4 
	.globl	main // Глобальное объявление функции main
	.type	main, @function  // Объявление типа функции main
main:
.LFB23:
	.cfi_startproc
	endbr64
	subq	$8, %rsp
	.cfi_def_cfa_offset 16
	movl	$15, %edi // Помещает значение 15 в регистр `edi`
	call	fibb@PLT // Вызов функции `fibb`
	movl	$15, %edx // Помещает значение 15 в регистр `edx`
	movl	$1, %edi // Помещает значение 1 в регистр `edi` 
	leaq	.LC0(%rip), %rsi // Загружает адрес строки с меткой `.LC0` в регистр `rsi`
	movl	%eax, %ecx // Копирует значение из регистра `eax` в регистр `ecx`
	xorl	%eax, %eax  // Обнуляет регистр `eax`
	call	__printf_chk@PLT // Вызов защищенной версии `printf`
	xorl	%eax, %eax // Обнуляет регистр `eax`
	addq	$8, %rsp // Восстанавливает указатель стека, освобождая 8 байт.
	.cfi_def_cfa_offset 8
	ret // Возвращение из функции `main`
	.cfi_endproc // Конец фрейма процедуры для отладчика.
.LFE23:
	.size	main, .-main // Определяет размер функции `main`.
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0" // Строка идентификации компилятора GCC, который скомпилировал этот файл.
	.section	.note.GNU-stack,"",@progbits // Секция для указания атрибутов стека
	.section	.note.gnu.property,"a" // Секция для указания свойств GNU
	.align 8 // Выравнивает следующий блок данных по 8-байтовой границе.
	.long	1f - 0f // Определяет длину данных между метками 0 и 1.
	.long	4f - 1f // Определяет длину данных между метками 1 и 4.
	.long	5 // Числовое значение
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
